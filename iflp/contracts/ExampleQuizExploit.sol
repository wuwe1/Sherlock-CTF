pragma solidity 0.8.4;

contract Lollercoaster {
    function randInt(uint256 n) external view returns (uint256) {
        return (uint160(address(this)) + block.number / 100) % n;
    }
}

contract ExampleQuizExploit {
    Lollercoaster private rng;
    bool private initialized = false;

    constructor() payable {}

    function initialize(address lollercoaster) external {
        require(initialized == false, "Already initialized");
        rng = Lollercoaster(lollercoaster);
        initialized = true;
    }

    function guess(uint256 n) external payable {
        require(msg.value == 1 ether, "msg.value");

        if (n == rng.randInt(1000000)) {
            // Send all ether to user
            (bool success, ) = msg.sender.call{value: address(this).balance}(
                ""
            );
            require(success, "send fail");
        }
    }
}
